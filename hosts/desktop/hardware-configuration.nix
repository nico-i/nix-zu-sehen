# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/4b657b61-9009-4c00-8d0e-95a2f9d460f4";
      fsType = "btrfs";
      options = [ "subvol=root" ];
    };

  fileSystems."/persist" =
    { device = "/dev/disk/by-uuid/4b657b61-9009-4c00-8d0e-95a2f9d460f4";
      fsType = "btrfs";
      options = [ "subvol=persist" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/4b657b61-9009-4c00-8d0e-95a2f9d460f4";
      fsType = "btrfs";
      options = [ "subvol=nix" ];
    };

  fileSystems."/var/lib/nixos" =
    { device = "/nix/persist/system/var/lib/nixos";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/var/log" =
    { device = "/nix/persist/system/var/log";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/etc/NetworkManager/system-connections" =
    { device = "/nix/persist/system/etc/NetworkManager/system-connections";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/etc/nixos" =
    { device = "/nix/persist/system/etc/nixos";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.cache/mozilla" =
    { device = "/nix/persist/users/home/nico/.cache/mozilla";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.config/chromium" =
    { device = "/nix/persist/users/home/nico/.config/chromium";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.config/nvim" =
    { device = "/nix/persist/users/home/nico/.config/nvim";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.config/tenacity" =
    { device = "/nix/persist/users/home/nico/.config/tenacity";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.local/share/PrismLauncher" =
    { device = "/nix/persist/users/home/nico/.local/share/PrismLauncher";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.config/vesktop" =
    { device = "/nix/persist/users/home/nico/.config/vesktop";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.local/share/Steam" =
    { device = "/nix/persist/users/home/nico/.local/share/Steam";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.local/share/TelegramDesktop" =
    { device = "/nix/persist/users/home/nico/.local/share/TelegramDesktop";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.local/share/direnv/allow" =
    { device = "/nix/persist/users/home/nico/.local/share/direnv/allow";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.local/share/nvim" =
    { device = "/nix/persist/users/home/nico/.local/share/nvim";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.mozilla" =
    { device = "/nix/persist/users/home/nico/.mozilla";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/.ssh" =
    { device = "/nix/persist/users/home/nico/.ssh";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home/nico/nix-config" =
    { device = "/nix/persist/users/home/nico/nix-config";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/var/lib/bluetooth" =
    { device = "/nix/persist/system/var/lib/bluetooth";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/var/lib/colord" =
    { device = "/nix/persist/system/var/lib/colord";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/var/lib/systemd/coredump" =
    { device = "/nix/persist/system/var/lib/systemd/coredump";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/DCEC-CCB0";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/b3c6ce2b-6a92-4fe6-acb8-1152d6ac009b"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp8s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
